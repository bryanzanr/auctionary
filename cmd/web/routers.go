/*
 * Swagger Petstore
 *
 * This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters.
 *
 * API version: 1.0.0
 * Contact: apiteam@swagger.io
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package web

import (
	"fmt"
	"net/http"
	"strings"

	"github.com/gorilla/mux"

	sw "github.com/bryanzanr/auctionary/internal/service"
	utils "github.com/bryanzanr/auctionary/internal/utils"
)

type Route struct {
	Name        string
	Method      string
	Pattern     string
	HandlerFunc http.HandlerFunc
}

type Routes []Route

func NewRouter() *mux.Router {
	router := mux.NewRouter().StrictSlash(true)
	for _, route := range routes {
		var handler http.Handler
		handler = route.HandlerFunc
		handler = utils.Logger(handler, route.Name)

		router.
			Methods(route.Method).
			Path(route.Pattern).
			Name(route.Name).
			Handler(handler)
	}

	return router
}

func Index(w http.ResponseWriter, r *http.Request) {
	fmt.Fprintf(w, "Hello World!")
}

var routes = Routes{
	Route{
		"Index",
		"GET",
		"/v2/",
		Index,
	},

	Route{
		"AddPet",
		strings.ToUpper("Post"),
		"/v2/pet",
		sw.AddPet,
	},

	Route{
		"DeletePet",
		strings.ToUpper("Delete"),
		"/v2/pet/{petId}",
		sw.DeletePet,
	},

	Route{
		"FindPetsByStatus",
		strings.ToUpper("Get"),
		"/v2/pet/findByStatus",
		sw.FindPetsByStatus,
	},

	Route{
		"FindPetsByTags",
		strings.ToUpper("Get"),
		"/v2/pet/findByTags",
		sw.FindPetsByTags,
	},

	Route{
		"GetPetById",
		strings.ToUpper("Get"),
		"/v2/pet/{petId}",
		sw.GetPetById,
	},

	Route{
		"UpdatePet",
		strings.ToUpper("Put"),
		"/v2/pet",
		sw.UpdatePet,
	},

	Route{
		"UpdatePetWithForm",
		strings.ToUpper("Post"),
		"/v2/pet/{petId}",
		sw.UpdatePetWithForm,
	},

	Route{
		"UploadFile",
		strings.ToUpper("Post"),
		"/v2/pet/{petId}/uploadImage",
		sw.UploadFile,
	},

	Route{
		"DeleteOrder",
		strings.ToUpper("Delete"),
		"/v2/store/order/{orderId}",
		sw.DeleteOrder,
	},

	Route{
		"GetInventory",
		strings.ToUpper("Get"),
		"/v2/store/inventory",
		sw.GetInventory,
	},

	Route{
		"GetOrderById",
		strings.ToUpper("Get"),
		"/v2/store/order/{orderId}",
		sw.GetOrderById,
	},

	Route{
		"PlaceOrder",
		strings.ToUpper("Post"),
		"/v2/store/order",
		sw.PlaceOrder,
	},

	Route{
		"CreateUser",
		strings.ToUpper("Post"),
		"/v2/user",
		sw.CreateUser,
	},

	Route{
		"CreateUsersWithArrayInput",
		strings.ToUpper("Post"),
		"/v2/user/createWithArray",
		sw.CreateUsersWithArrayInput,
	},

	Route{
		"CreateUsersWithListInput",
		strings.ToUpper("Post"),
		"/v2/user/createWithList",
		sw.CreateUsersWithListInput,
	},

	Route{
		"DeleteUser",
		strings.ToUpper("Delete"),
		"/v2/user/{username}",
		sw.DeleteUser,
	},

	Route{
		"GetUserByName",
		strings.ToUpper("Get"),
		"/v2/user/{username}",
		sw.GetUserByName,
	},

	Route{
		"LoginUser",
		strings.ToUpper("Get"),
		"/v2/user/login",
		sw.LoginUser,
	},

	Route{
		"LogoutUser",
		strings.ToUpper("Get"),
		"/v2/user/logout",
		sw.LogoutUser,
	},

	Route{
		"UpdateUser",
		strings.ToUpper("Put"),
		"/v2/user/{username}",
		sw.UpdateUser,
	},
}
